(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{183:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"美团、饿了么面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#美团、饿了么面试","aria-hidden":"true"}},[t._v("#")]),t._v(" 美团、饿了么面试")]),t._v(" "),a("h2",{attrs:{id:"美团"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#美团","aria-hidden":"true"}},[t._v("#")]),t._v(" 美团")]),t._v(" "),a("h3",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器中, js 引擎线程会循环从 任务队列 中读取事件并且执行, 这种运行机制称作 Event Loop (事件循环).")])]),t._v(" "),a("ul",[a("li",[t._v("每个浏览器环境，至多有一个 event loop。")]),t._v(" "),a("li",[t._v("一个 event loop 可以有 1 个或多个 task queue(任务队列)")]),t._v(" "),a("li",[t._v("先执行同步的代码，然后 js 会跑去消息队列中执行异步的代码，异步完成后，再轮到回调函数，然后是去下个事件循环中执行 setTimeout")]),t._v(" "),a("li",[t._v("它从 script(整体代码)开始第一次循环。之后全局上下文进入函数调用栈。直到调用栈清空(只剩全局)，然后执行所有的 micro-task。当所有可执行的 micro-task 执行完毕之后。循环再次从 macro-task 开始，找到其中一个任务队列执行完毕，然后再执行所有的 micro-task，这样一直循环下去。")]),t._v(" "),a("li",[t._v("从规范上来讲，setTimeout 有一个 4ms 的最短时间，也就是说不管你设定多少，反正最少都要间隔 4ms 才运行里面的回调。而 Promise 的异步没有这个问题。Promise 所在的那个异步队列优先级要高一些")]),t._v(" "),a("li",[t._v("Promise 是异步的，是指他的 then()和 catch()方法，Promise 本身还是同步的")]),t._v(" "),a("li",[t._v("Promise 的任务会在当前事件循环末尾中执行，而 setTimeout 中的任务是在下一次事件循环执行")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//依次输出 12354")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9999")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("ul",[a("li",[t._v("xss 和 csrf")]),t._v(" "),a("li",[t._v("事件捕获的应用")]),t._v(" "),a("li",[t._v("jsx 的优点")]),t._v(" "),a("li",[t._v("webpack loader 和 plugin 区别")]),t._v(" "),a("li",[t._v("性能优化")]),t._v(" "),a("li",[t._v("react 和 vue 的区别")]),t._v(" "),a("li",[t._v("vue component 和指令的区别")]),t._v(" "),a("li",[t._v("vue 组件通信")]),t._v(" "),a("li",[t._v("box-sizing")]),t._v(" "),a("li",[t._v("jsonp 缺点，为什么不能用 POST")]),t._v(" "),a("li",[t._v("vue-router 的实现原理")]),t._v(" "),a("li",[t._v("es6 用了哪些新特性")]),t._v(" "),a("li",[t._v("cookie 和 localStorage 区别")]),t._v(" "),a("li",[t._v("git fetch 是干嘛的")]),t._v(" "),a("li",[t._v("事件代理和冒泡，捕获")]),t._v(" "),a("li",[t._v("304 是干嘛的 具体，405 504 又是干嘛的")]),t._v(" "),a("li",[t._v("BFC、IFC")]),t._v(" "),a("li",[t._v("其他（自我介绍，为啥离职，为啥从美团离职，git 工作流，code review，单元测试）")]),t._v(" "),a("li",[t._v("react 组件生命周期")]),t._v(" "),a("li",[t._v("伪类和伪元素的区别\n"),a("ul",[a("li",[t._v("CSS 伪类：逻辑上存在但在文档树中却无须标识的“幽灵”分类")]),t._v(" "),a("li",[t._v("CSS 伪元素（"),a("code",[t._v(":first-letter，:first-line,:after,:before")]),t._v("）代表了某个元素的子元素，这个子元素虽然在逻辑上存在，但却并不实际存在于文档树中。")]),t._v(" "),a("li",[t._v("CSS3 标准要求伪元素使用双冒号")])])]),t._v(" "),a("li",[t._v("em 和 rem")])]),t._v(" "),a("h2",{attrs:{id:"饿了么面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#饿了么面试","aria-hidden":"true"}},[t._v("#")]),t._v(" 饿了么面试")]),t._v(" "),a("h3",{attrs:{id:"_1-什么是类数组对象，如何将类数组对象转为真正的数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是类数组对象，如何将类数组对象转为真正的数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 什么是类数组对象，如何将类数组对象转为真正的数组")]),t._v(" "),a("ul",[a("li",[t._v("拥有 length 属性和若干索引属性的对象")]),t._v(" "),a("li",[t._v("类数组只有索引值和长度，没有数组的各种方法，所以如果要类数组调用数组的方法，就需要使用 Array.prototype.method.call 来实现。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arrayLike "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'name'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'age'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'sex'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 1. slice")]),t._v("\nArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["name", "age", "sex"]')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 2. splice")]),t._v("\nArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("splice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["name", "age", "sex"]')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 3. ES6 Array.from")]),t._v("\nArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ["name", "age", "sex"]')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 4. apply")]),t._v("\nArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concat"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("apply")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arrayLike"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 跨域")]),t._v(" "),a("ul",[a("li",[t._v("域名、端口号、协议，只要有一个不同就存在跨域")])]),t._v(" "),a("h3",{attrs:{id:"_3-伪元素和伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-伪元素和伪类","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 伪元素和伪类")]),t._v(" "),a("p",[t._v("伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{attrs:{class:"token property"}},[t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token property"}},[t._v("link")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token property"}},[t._v("first-child")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token property"}},[t._v("nth-child")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token property"}},[t._v("focus")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("visited\n")])])]),a("p",[t._v("伪元素代表了某个元素的子元素，这个子元素虽然在逻辑上存在，但却并不实际存在于文档树中。")]),t._v(" "),a("h3",{attrs:{id:"_4-bind-返回什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-bind-返回什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. bind 返回什么")]),t._v(" "),a("ul",[a("li",[t._v("bind() 方法会返回一个新函数, 又叫绑定函数, 当调用这个绑定函数时, 绑定函数会以创建它时传入 bind()")]),t._v(" "),a("li",[t._v("方法的第一个参数作为当前的上下文, 即 this, 传入 bind() 方法的第二个及之后的参数加上绑定函数运行时自身的参数按照顺序作为原函数的参数来调用原函数.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  getX"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getX\n"),a("span",{attrs:{class:"token function"}},[t._v("f")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//8, 由于没有绑定执行时的上下文, this默认指向window, 打印了全局变量x的值")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" g "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("bind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("g")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//10, 绑定this后, 成功的打印了o对象的x属性的值.")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-git-rebase-和-git-merge-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-rebase-和-git-merge-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. git rebase 和 git merge 的区别")]),t._v(" "),a("p",[t._v("merge 操作会生成一个新的节点，之前的提交分开显示。而 rebase 操作不会生成新的节点，是将两个分支融合成一个线性的提交。")]),t._v(" "),a("h3",{attrs:{id:"_6-箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-箭头函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 箭头函数")]),t._v(" "),a("ul",[a("li",[t._v("箭头函数没有它自己的 this 值，箭头函数内的 this 值继承自外围作用域")]),t._v(" "),a("li",[t._v("箭头函数不能用作构造器，不能和 new 一起使用")]),t._v(" "),a("li",[t._v("箭头函数没有原型属性")]),t._v(" "),a("li",[t._v("yield 关键字不能在箭头函数使用")]),t._v(" "),a("li",[t._v("在以下场景中不要使用箭头函数去定义：\n"),a("ul",[a("li",[t._v("定义对象方法、定义原型方法、定义构造函数、定义事件回调函数。")])])])]),t._v(" "),a("h3",{attrs:{id:"_7-和-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-和-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. == 和"),a("code",[t._v("===")]),t._v("的区别")]),t._v(" "),a("ul",[a("li",[t._v("相等运算符在比较相同类型的数据时，与严格相等运算符完全一样。")]),t._v(" "),a("li",[t._v("在比较不同类型的数据时，相等运算符会先将数据进行类型转换，然后再用严格相等运算符比较。")])]),t._v(" "),a("h3",{attrs:{id:"new-操作符具体做了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-操作符具体做了什么","aria-hidden":"true"}},[t._v("#")]),t._v(" new 操作符具体做了什么")]),t._v(" "),a("ol",[a("li",[t._v("创建一个空对象，并且 "),a("code",[t._v("this")]),t._v(" 变量引用该对象，同时继承了该函数的原型（实例对象通过"),a("code",[t._v("__proto__")]),t._v("属性指向原型对象；"),a("code",[t._v("obj.__proto__ = Base.prototype;")]),t._v("）")]),t._v(" "),a("li",[t._v("属性和方法被加入到 this 引用的对象中")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Animal")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nAnimal"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("run")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'can run...'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cat "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'cat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//模拟过程")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'cat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("//创建一个空对象")]),t._v("\n    obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("Animal"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//把该对象的原型指向构造函数的原型对象，就建立起原型了：obj->Animal.prototype->Object.prototype->null")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Animal"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'cat'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("// 绑定this到实例化的对象上")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"谈谈你对组件的看法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对组件的看法","aria-hidden":"true"}},[t._v("#")]),t._v(" 谈谈你对组件的看法")]),t._v(" "),a("p",[t._v("一个组件应该有以下特征：")]),t._v(" "),a("ul",[a("li",[t._v("可组合（Composeable）：一个组件易于和其它组件一起使用，或者嵌套在另一个组件内部。如果一个组件内部创建了另一个组件，那么说父组件拥有（own）它创建的子组件，通过这个特性，一个复杂的 UI 可以拆分成多个简单的 UI 组件；")]),t._v(" "),a("li",[t._v("可重用（Reusable）：每个组件都是具有独立功能的，它可以被使用在多个 UI 场景；")]),t._v(" "),a("li",[t._v("可维护（Maintainable）：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护；")]),t._v(" "),a("li",[t._v("可测试（Testable）：因为每个组件都是独立的，那么对于各个组件分别测试显然要比对于整个 UI 进行测试容易的多。")])])])}],!1,null,null,null);o.options.__file="mt-ele.md";s.default=o.exports}}]);