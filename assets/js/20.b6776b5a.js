(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{164:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("360 的面试和网易一样，是一天之内完成三轮面试，不同的是，他们是视频面试，用的牛客网的系统。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("我感觉等会肯定会问 Angular 的问题...")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("组件化、模块化、抽象、封装、隔离类职责、OOP 的其他原则")]),t._v(" "),t._m(7),t._v(" "),r("p",[t._v("详情见"),r("a",{attrs:{href:"http://www.jianshu.com/p/7cde12a02964",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 的数据绑定"),r("OutboundLink")],1)]),t._v(" "),t._m(8),t._v(" "),r("p",[t._v("详情见"),r("a",{attrs:{href:"http://www.jianshu.com/p/607daed38fa0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 与面向对象"),r("OutboundLink")],1)]),t._v(" "),t._m(9),t._m(10),t._v(" "),r("p",[t._v("前面没听过，后面了解过：\n函数式编程引入了纯函数的概念来帮助编程，纯函数对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用，也不依赖外部环境的状态。它是一种编程范式。RXJS 用到了它。")]),t._v(" "),t._m(11),t._v(" "),r("p",[t._v("详情见"),r("a",{attrs:{href:"http://www.jianshu.com/p/fca0facfe381",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 与跨域"),r("OutboundLink")],1)]),t._v(" "),t._m(12),t._v(" "),r("p",[t._v("新开辟一块内存空间，把源对象的属性和方法逐个拷贝进来。")]),t._v(" "),t._m(13),t._m(14),t._v(" "),r("p",[t._v("gulp、webpack。打包工具，把所有文件看做是资源，然后根据它们的依赖关系打包成一个最终文件。")]),t._v(" "),r("p",[t._v("10.你后端为什么使用 node")]),t._v(" "),r("p",[t._v("想前后端同构，现查现用")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),r("p",[t._v("ts 是 js 的超集，es 的所有特性它都支持，包括还在草案的 await/async 和装饰器等，另外就是加入了 C#的一些语法，可以使用它进行传统的 OOP 编程，对工程化和多人项目协助非常友好。我只用到了和 es 有关的部分。js 是 JIT 的解释语言，ts 支持 AOT 编译语言。")]),t._v(" "),t._m(17),t._v(" "),r("p",[t._v("详情见"),r("a",{attrs:{href:"http://www.jianshu.com/p/7cde12a02964",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 的数据绑定"),r("OutboundLink")],1)]),t._v(" "),t._m(18),t._v(" "),r("p",[t._v("装饰器可以将各个类解耦，可以方便的扩充一个类的功能。\n通过注解的方式解析模板，具体是由@angular/compiler 库和 html-parser 库完成的。但未来会采用 AOT 的方式直接编译成用来生成和维护 DOM 结构的 JavaScript 代码。所以实际上并不会把字符串解析成 HTML 模板。")]),t._v(" "),t._m(19),t._v(" "),r("p",[t._v("封装多态继承抽象。\n封装：封装是通过限制只有特定类的对象可以访问这一特定类的成员，而它们通常利用接口实现消息的传入传出。\n多态：多态是指由继承而产生的相关的不同的类，其对象对同一消息会做出不同的响应。\n继承：指在某种情况下，一个类会有子类，子类比原本的类（父类）要更加具体化。")]),t._v(" "),t._m(20),t._v(" "),r("p",[t._v("JS 本身是不提供多重继承，可以模拟多重继承，但是它会大大增加代码的复杂度和维护难度。\n图，查找时出现循环，改成委托行为(数据结构变成链表)。")]),t._v(" "),t._m(21),t._v(" "),r("p",[t._v("如果一系列操作数据的规则（如指令集、编程语言、细胞自动机）可以用来模拟单带图灵机，那么它是图灵完备的。图灵机由以下几个部分组成：\n一条无限长的纸带 TAPE。\n一个读写头 HEAD。\n一套控制规则 TABLE。\n一个状态寄存器。")]),t._v(" "),t._m(22),t._v(" "),r("p",[t._v("insertBefore,\n如果是后面的话就先找到该元素的父元素，然后判断该元素是否是最后一个元素，如果是最后一个元素就直接在父元素上 appendChild。\n如果不是最后一个元素，就找到该元素的下一个元素，然后在它的下一个元素之前用 insertBefore 插入。")]),t._v(" "),t._m(23),t._v(" "),r("p",[t._v("前序、中序、后序")]),t._v(" "),t._m(24),t._v(" "),r("p",[t._v("递归是函数调用自己，迭代是循环调用别的函数\n尾调用就是在 return 的地方执行递归")]),t._v(" "),t._m(25),t._v(" "),r("p",[t._v("不冲突，比如 TS 和 rxjs 在 NG 项目并存，并且 js 也是一门灵活的语言")]),t._v(" "),t._m(26),t._v(" "),r("p",[t._v("它是一种设计模式，可以让类从外部源中获得它的依赖，而不必亲自创建它们。最大的好处是让使用者和被使用者解耦，从而反转依赖。")]),t._v(" "),t._m(27),t._v(" "),r("p",[t._v("策略模式指对象有某个行为，但是在不同的场景中，该行为有不同的实现算法。\n单例模式中单例对象的类必须保证只有一个实例存在。")]),t._v(" "),t._m(28),t._v(" "),r("p",[t._v("Reflow 定义：元素要先计算才渲染。\n增删改 DOM、移动 DOM 位置、修改一些 CSS 样式、Resize 窗口、修改默认字体等会触发。\nRepaint 定义：元素的属性已经确认下来不需要计算，只需要绘制。\n样式、DOM 有变动都会触发，尽量少触发：比如使用 DocumentFragment 操作 DOM。"),r("a",{attrs:{href:"https://github.com/justjavac/the-front-end-knowledge-you-may-dont-know/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考资料"),r("OutboundLink")],1)]),t._v(" "),t._m(29),t._v(" "),r("p",[t._v("详情见"),r("a",{attrs:{href:"http://www.jianshu.com/p/fca0facfe381",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 与跨域"),r("OutboundLink")],1)]),t._v(" "),t._m(30),t._v(" "),r("p",[t._v("setTimeout 由于不准确会出现掉帧丢帧的情况，requestAnimationFrame 是帧刷新驱动的。\n"),r("a",{attrs:{href:"https://stackoverflow.com/questions/19906947/is-there-anything-faster-than-settimeout-and-requestanimationframe",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考回答"),r("OutboundLink")],1)]),t._v(" "),t._m(31),t._v(" "),r("p",[t._v("见"),r("a",{attrs:{href:"http://www.jianshu.com/p/3e4403d5bb48",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 与事件"),r("OutboundLink")],1)]),t._v(" "),t._m(32),t._v(" "),r("p",[t._v("xss、csrf、sql 注入、ddos、文件上传漏洞、内存缓冲区溢出、弱口令、社工等等\nxss 重点在跨站脚本攻击，混淆数据和代码从而达到目的，所以常常用来散布蠕虫\ncsrf 重点在跨域请求伪造，一般利用的是 web 中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。所以常常用来刷接口")]),t._v(" "),t._m(33),t._v(" "),r("p",[t._v("mov、jmp、mul、add、ret、loop 等等...")]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),r("p",[t._v("见"),r("a",{attrs:{href:"http://www.jianshu.com/p/3e4403d5bb48",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 与事件"),r("OutboundLink")],1)]),t._v(" "),t._m(37),t._v(" "),r("p",[t._v("闭包是 JS 特有的一种作用域机制，它可以让一个函数作用域有权力访问作用域链上的变量。\n通过 chrome 的开发者工具的 memory 栏可以观察。")]),t._v(" "),t._m(38),t._v(" "),r("p",[t._v("因为 CSS animations, transforms 以及 transitions 不会自动开启 GPU 加速，而是由浏览器的缓慢的软件渲染引擎来执行，所以可以使用 transform: translateZ(0)来开启硬件加速。transform: translate3d(0, 0, 0)也可以。")]),t._v(" "),t._m(39),t._v(" "),r("p",[t._v("当时直接说没有。\n"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/learn/WebGL",target:"_blank",rel:"noopener noreferrer"}},[t._v("webgl 学习资料"),r("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"_360-面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_360-面","aria-hidden":"true"}},[this._v("#")]),this._v(" 360 面")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"一面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一面","aria-hidden":"true"}},[this._v("#")]),this._v(" 一面")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-谈谈项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-谈谈项目","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 谈谈项目")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-你说设计模式，那你的项目里用到了哪些设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-你说设计模式，那你的项目里用到了哪些设计模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 你说设计模式，那你的项目里用到了哪些设计模式?")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("1.依赖注入模式（服务）")]),t._v(" "),r("li",[t._v("2.观察者模式（rxjs）")]),t._v(" "),r("li",[t._v("3.单例模式（模块）")]),t._v(" "),r("li",[t._v("4.模板方法模式（钩子）")]),t._v(" "),r("li",[t._v("5.装饰者模式（组件）")]),t._v(" "),r("li",[t._v("6.发布订阅模式(事件)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-项目里的架构是什么样的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-项目里的架构是什么样的","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 项目里的架构是什么样的")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-ng-的双向数据绑定是怎么样的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-ng-的双向数据绑定是怎么样的","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. NG 的双向数据绑定是怎么样的")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-谈谈面向对象和继承，object-create-的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-谈谈面向对象和继承，object-create-的实现原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. 谈谈面向对象和继承，object.create 的实现原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Object.create = function(o) {\n        function F(){}\n        F.prototype = o;\n        return new F();\n };\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_6-面向切面编程和函数式编程听说过吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-面向切面编程和函数式编程听说过吗","aria-hidden":"true"}},[this._v("#")]),this._v(" 6. 面向切面编程和函数式编程听说过吗")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-谈谈跨域，postmessage-的应用场景是什么样的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-谈谈跨域，postmessage-的应用场景是什么样的？","aria-hidden":"true"}},[this._v("#")]),this._v(" 7. 谈谈跨域，postmessage 的应用场景是什么样的？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-对象深拷贝怎么实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-对象深拷贝怎么实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 8. 对象深拷贝怎么实现")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function deepClone (obj) {\n  let temp = Array.isArray(obj) ? [] : {}\n  for (let key in obj) {\n    //是否有嵌套对象\n    temp[key] = typeof obj[key] === 'object' ? deepCopy(obj[key]) : obj[key]\n  }\n  return temp\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_9-谈谈你使用过的构建工具，说说对-webpack-的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-谈谈你使用过的构建工具，说说对-webpack-的理解","aria-hidden":"true"}},[this._v("#")]),this._v(" 9. 谈谈你使用过的构建工具，说说对 webpack 的理解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"二面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二面","aria-hidden":"true"}},[this._v("#")]),this._v(" 二面")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-谈谈你对-ts-的理解，项目中对-ts-用到什么程度？js-和-ts-有什么本质的区别。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-谈谈你对-ts-的理解，项目中对-ts-用到什么程度？js-和-ts-有什么本质的区别。","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 谈谈你对 ts 的理解，项目中对 ts 用到什么程度？js 和 ts 有什么本质的区别。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-既然用过-angular，zone-js-了解多少，干嘛用的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-既然用过-angular，zone-js-了解多少，干嘛用的？","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 既然用过 angular，zone.js 了解多少，干嘛用的？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-ng-的装饰器模式理解多少？知道-ng-怎么把字符串转换成模板引擎的吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-ng-的装饰器模式理解多少？知道-ng-怎么把字符串转换成模板引擎的吗？","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. ng 的装饰器模式理解多少？知道 ng 怎么把字符串转换成模板引擎的吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-面向对象的概念是什么？解释一下封装、多态、继承-的意义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-面向对象的概念是什么？解释一下封装、多态、继承-的意义","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. 面向对象的概念是什么？解释一下封装、多态、继承 的意义")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-多重继承怎么实现，多重继承里可能会出现什么数据结构？从而导致什么问题？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-多重继承怎么实现，多重继承里可能会出现什么数据结构？从而导致什么问题？","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. 多重继承怎么实现，多重继承里可能会出现什么数据结构？从而导致什么问题？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_6-图灵完备理论知道吗？关于图灵的其他知识知道吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-图灵完备理论知道吗？关于图灵的其他知识知道吗？","aria-hidden":"true"}},[this._v("#")]),this._v(" 6. 图灵完备理论知道吗？关于图灵的其他知识知道吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-如何在一个-dom-节点前面插入节点？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何在一个-dom-节点前面插入节点？","aria-hidden":"true"}},[this._v("#")]),this._v(" 7. 如何在一个 dom 节点前面插入节点？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-树的遍历方法有哪些？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-树的遍历方法有哪些？","aria-hidden":"true"}},[this._v("#")]),this._v(" 8. 树的遍历方法有哪些？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_9-递归和迭代的区别是什么，各有什么优缺点-尾调用知道吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-递归和迭代的区别是什么，各有什么优缺点-尾调用知道吗？","aria-hidden":"true"}},[this._v("#")]),this._v(" 9. 递归和迭代的区别是什么，各有什么优缺点?尾调用知道吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-函数式编程和面向对象编程冲突吗？为什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-函数式编程和面向对象编程冲突吗？为什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" 10. 函数式编程和面向对象编程冲突吗？为什么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_11-讲讲你对-di（依赖注入）的理解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-讲讲你对-di（依赖注入）的理解？","aria-hidden":"true"}},[this._v("#")]),this._v(" 11. 讲讲你对 DI（依赖注入）的理解？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_12-策略模式和单例模式说一下理解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-策略模式和单例模式说一下理解？","aria-hidden":"true"}},[this._v("#")]),this._v(" 12. 策略模式和单例模式说一下理解？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_13-reflow-和-repaint-的区别？如何避免重绘？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-reflow-和-repaint-的区别？如何避免重绘？","aria-hidden":"true"}},[this._v("#")]),this._v(" 13. Reflow 和 Repaint 的区别？如何避免重绘？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_14-讲讲跨域的方法？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-讲讲跨域的方法？","aria-hidden":"true"}},[this._v("#")]),this._v(" 14. 讲讲跨域的方法？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_15-settimeout-和-requestanimationframe-的区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-settimeout-和-requestanimationframe-的区别？","aria-hidden":"true"}},[this._v("#")]),this._v(" 15. setTimeout 和 requestAnimationFrame 的区别？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_16-谈谈事件模型？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-谈谈事件模型？","aria-hidden":"true"}},[this._v("#")]),this._v(" 16. 谈谈事件模型？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_17-讲讲安全方面的攻击手段？xss-和-csrf-有什么区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-讲讲安全方面的攻击手段？xss-和-csrf-有什么区别？","aria-hidden":"true"}},[this._v("#")]),this._v(" 17. 讲讲安全方面的攻击手段？xss 和 csrf 有什么区别？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_18-汇编的指令还记得多少？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-汇编的指令还记得多少？","aria-hidden":"true"}},[this._v("#")]),this._v(" 18. 汇编的指令还记得多少？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_19-矩阵转置和矩阵相乘还记得吗？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-矩阵转置和矩阵相乘还记得吗？","aria-hidden":"true"}},[this._v("#")]),this._v(" 19. 矩阵转置和矩阵相乘还记得吗？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("转置是把矩阵的行变成列，列变成行\n相乘是把一个 mxn 和 nxp 的矩阵转成 mxp 的矩阵\n"),e("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4762028-5a33553cc3c152a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"矩阵相乘公式.png"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_20-谈谈事件循环？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-谈谈事件循环？","aria-hidden":"true"}},[this._v("#")]),this._v(" 20. 谈谈事件循环？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_21-闭包是什么？内存泄露怎么观察？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_21-闭包是什么？内存泄露怎么观察？","aria-hidden":"true"}},[this._v("#")]),this._v(" 21. 闭包是什么？内存泄露怎么观察？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_22-如何使用-css-实现硬件加速？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_22-如何使用-css-实现硬件加速？","aria-hidden":"true"}},[this._v("#")]),this._v(" 22. 如何使用 css 实现硬件加速？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_23-webgl-了解过没有？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_23-webgl-了解过没有？","aria-hidden":"true"}},[this._v("#")]),this._v(" 23. webgl 了解过没有？")])}],!1,null,null,null);s.options.__file="360.md";e.default=s.exports}}]);