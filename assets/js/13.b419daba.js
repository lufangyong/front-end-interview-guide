(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{163:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("vue 官方："),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/comparison.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("对比其他框架"),a("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("相同点：")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("不同点：")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("我觉得这优缺点就因人而异，见仁见智了。")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("React 中的 render 方法，返回一个 DOM 描述，结果仅仅是轻量级的 js 对象。")]),t._v(" "),a("p",[t._v("Reactjs 只在调用 setState 的时候会更新 dom，而且还是先更新 Virtual Dom，然后和实际 DOM 比较，最后再更新实际 DOM。")]),t._v(" "),a("p",[t._v("React.js 厉害的地方并不是说它比 DOM 快（这句话本来就是错的），而是说不管你数据怎么变化，我都可以以最小的代价来更新 DOM。方法就是我在内存里面用新的数据刷新一个虚拟的 DOM 树，然后新旧 DOM 树进行比较，找出差异，再更新到真正的 DOM 树上。")]),t._v(" "),a("p",[t._v("当我们修改了 DOM 树上一些节点对应绑定的 state，React 会立即将它标记为“脏状态”。在事件循环的最后才重新渲染所有的脏节点。在实际的代码中，会对新旧两棵树进行一个深度优先的遍历，这样每个节点都会有一个唯一的标记，每遍历到一个节点就把该节点和新的的树进行对比。如果有差异的话就记录到一个对象里面，最后把差异应用到真正的 DOM 树上。")]),t._v(" "),a("p",[t._v("算法实现")]),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("这就是所谓的 diff 算法")]),t._v(" "),a("p",[t._v("dom diff 采用的是增量更新的方式，类似于打补丁。React 需要为数据添加 key 来保证虚拟 DOM diff 算法的效率。key 属性可以帮助 React 定位到正确的节点进行比较，从而大幅减少 DOM 操作次数，提高了性能。")]),t._v(" "),t._m(12),t._v(" "),a("p",[a("a",{attrs:{href:"http://react-china.org/t/dom/638",target:"_blank",rel:"noopener noreferrer"}},[t._v("怎么更好的理解虚拟 dom?"),a("OutboundLink")],1)]),t._v(" "),t._m(13),t._v(" "),a("p",[t._v("为了解决频繁操作 DOM 导致 Web 应用效率下降的问题，React 提出了“虚拟 DOM”（virtual DOM）的概念。Virtual DOM 是使用 JavaScript 对象模拟 DOM 的一种对象结构。DOM 树中所有的信息都可以用 JavaScript 表述出来，例如：")]),t._v(" "),t._m(14),a("p",[t._v("可以用以下 JavaScript 对象来表示：")]),t._v(" "),t._m(15),a("p",[t._v("这样可以避免直接频繁地操作 DOM，只需要在 js 对象模拟的虚拟 DOM 进行比对，再将更改的部分应用到真实的 DOM 树上")]),t._v(" "),t._m(16),t._v(" "),a("p",[t._v("使用 PureRenderMixin、shouldComponentUpdate 来避免不必要的虚拟 DOM diff，在 render 内部优化虚拟 DOM 的 diff 速度，以及让 diff 结果最小化。")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("无状态组件其实本质上就是一个函数，传入 props 即可，没有 state，也没有生命周期方法。组件本身对应的就是 render 方法。例子如下：")]),t._v(" "),t._m(22),a("p",[t._v("无状态组件不会创建对象，故比较省内存。没有复杂的生命周期方法调用，故流程比较简单。没有 state，也不会重复渲染。它本质上就是一个函数而已。")]),t._v(" "),a("p",[t._v("对于没有状态变化的组件，React 建议我们使用无状态组件。总之，能用无状态组件的地方，就用无状态组件。")]),t._v(" "),t._m(23),t._v(" "),a("p",[t._v("高阶组件（HOC）是函数接受一个组件，返回一个新组件。其前身其实是用 ES5 创建组件时可用的 mixin 方法，但是在 react 版本升级过程中，使用 ES6 语法创建组件时，认为 mixin 是反模式，影响了 react 架构组件的封装稳定性，增加了不可控的复杂度，逐渐被 HOC 所替代。\n实现高阶组件的方式有：")]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),a("p",[t._v("反向继承是指返回的组件去继承之前的组件(这里都用 WrappedComponent 代指)")]),t._v(" "),t._m(27),a("p",[t._v("我们可以看见返回的组件确实都继承自 WrappedComponent,那么所有的调用将是反向调用的(例如:super.render())，这也就是为什么叫做反向继承。")]),t._v(" "),t._m(28),t._v(" "),a("p",[t._v("React 实现了一个“合成事件”层（synthetic event system），这个事件模型保证了和 W3C 标准保持一致，所以不用担心有什么诡异的用法，并且这个事件层消除了 IE 与 W3C 标准实现之间的兼容问题。")]),t._v(" "),a("p",[t._v("“合成事件”还提供了额外的好处：")]),t._v(" "),a("p",[t._v("事件委托")]),t._v(" "),a("p",[t._v("“合成事件”会以事件委托（event delegation）的方式绑定到组件最上层，并且在组件卸载（unmount）的时候自动销毁绑定的事件。")]),t._v(" "),t._m(29),t._v(" "),a("p",[t._v("react 组件更新过程：")]),t._v(" "),a("p",[t._v("props/state change：")]),t._v(" "),t._m(30),t._v(" "),a("p",[t._v("只要是父组件的 render 被调用，在 render 中被渲染的子组件就会经历更新的过程。不管父组件传给子组件的 props 有没有改变，都会触发子组件的此函数被调用。注意：通过 setState 方法触发的更新不会调用此函数")]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/hawx1993/tech-blog/issues/11",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 vue2.0 的实现源码剖析(一)"),a("OutboundLink")],1)]),t._v(" "),t._m(35),t._v(" "),a("p",[t._v("在渲染过程中，会跟踪每一个组件的依赖关系，不需要重新渲染整个组件树。而对于 React 而言，每当应用的状态被改变时，全部子组件都会重新渲染。\n在 React 应用中，当某个组件的状态发生变化时，它会以该组件为根，重新渲染整个组件子树。")]),t._v(" "),t._m(36),t._v(" "),a("p",[t._v("在 React 中，数据流是自上而下单向的从父节点传递到子节点，所以组件是简单且容易把握的，子组件只需要从父节点提供的 props 中获取数据并渲染即可。如果顶层组件的某个 prop 改变了，React 会递归地向下遍历整棵组件树，重新渲染所有使用这个属性的组件。")]),t._v(" "),t._m(37),t._v(" "),a("p",[t._v("与 v-if 不同的是，无论 v-show 的值为 true 或 false，元素都会存在于 HTML 代码中；而只有当 v-if 的值为 true，元素才会存在于 HTML 代码中")]),t._v(" "),t._m(38),t._v(" "),a("p",[t._v("非父子组件间通信，Vue 有提供 Vuex，以状态共享方式来实现同信，对于这一点，应该注意考虑平衡，从整体设计角度去考量，确保引入她的必要。")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("框架能够让我们跑的更快，但只有了解原生的 JS 才能让我们走的更远。")]),t._v(" "),a("p",[t._v("vue 专注于 MVVM 中的 viewModel 层，通过双向数据绑定，把 view 层和 Model 层连接了起来。核心是用数据来驱动 DOM。这种把 directive 和 component 混在一起的设计有一个非常大的问题，它导致了很多开发者滥用 Directive（指令），出现了到处都是指令的情况。")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),t._m(42),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),a("p",[t._v("用户操作 view 层，view 数据变化会同步到 Model，Model 数据变化会立即反应到 view 中。viewModel 通过双向数据绑定把 view 层和 Model 层连接了起来")]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),a("p",[t._v("mixin 混合对象（组件复用）")]),t._v(" "),a("p",[t._v("同名钩子函数（bind，inserted，update，componentUpdate，unbind）将混合为一个数组，因此都将被调用，混合对象的钩子将在组件自身钩子之前调用")]),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),a("p",[t._v("单向数据流")]),t._v(" "),t._m(52),t._v(" "),a("p",[t._v("双向数据流的优点：")]),t._v(" "),a("p",[t._v("无需进行和单向数据绑定的那些 CRUD（Create，Retrieve，Update，Delete）操作；\n双向绑定在一些需要实时反应用户输入的场合会非常方便\n用户在视图上的修改会自动同步到数据模型中去，数据模型中值的变化也会立刻同步到视图中去；")]),t._v(" "),a("p",[t._v("双向数据流的缺点：")]),t._v(" "),t._m(53),t._v(" "),a("p",[t._v("Vue 虽然通过 v-model 支持双向绑定，但是如果引入了类似 redux 的 vuex，就无法同时使用 v-model。")]),t._v(" "),a("p",[t._v("双绑跟单向绑定之间的差异只在于，双向绑定把数据变更的操作隐藏在框架内部，调用者并不会直接感知。")]),t._v(" "),t._m(54),a("p",[t._v("也就是说，你只需要在组件中声明一个 name 为 value 的 props，并且通过触发 input 事件传入一个值，就能修改这个 value。")]),t._v(" "),t._m(55),t._v(" "),a("p",[t._v("两种实现前端路由的方式")]),t._v(" "),t._m(56),t._v(" "),a("p",[t._v("可以为 hash 的改变添加监听事件：")]),t._v(" "),t._m(57),a("p",[t._v("优点")]),t._v(" "),t._m(58),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),t._m(59),t._v(" "),t._m(60)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#框架","aria-hidden":"true"}},[this._v("#")]),this._v(" 框架")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"react-和-vue-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-和-vue-的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" react 和 vue 的区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("都支持服务端渲染")]),this._v(" "),s("li",[this._v("都有 Virtual DOM，组件化开发，通过 props 参数进行父子组件数据的传递，都实现 webComponents 规范")]),this._v(" "),s("li",[this._v("数据驱动视图")]),this._v(" "),s("li",[this._v("都有支持 native 的方案，React 的 React native，Vue 的 weex")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("React 严格上只针对 MVC 的 view 层，Vue 则是 MVVM 模式")]),t._v(" "),a("li",[t._v("virtual DOM 不一样\nvue 会跟踪每一个组件的依赖关系，不需要重新渲染整个组件树。而对于 React 而言，每当应用的状态被改变时，全部子组件都会重新渲染。当然，这可以通过 shouldComponentUpdate 这个生命周期方法来进行控制，")]),t._v(" "),a("li",[t._v("组件写法不一样\nReact 推荐的做法是 JSX + inline style，也就是把 HTML 和 CSS 全都写进 JavaScript 了，即”all in js”\nVue 推荐的是使用 "),a("code",[t._v("webpack + vue-loader")]),t._v(" 的单文件组件格式，即 html,css,js 写在同一个文件；")]),t._v(" "),a("li",[t._v("数据绑定：Vue 有实现了双向数据绑定，React 数据流动是单向的")]),t._v(" "),a("li",[t._v("state 对象在 react 应用中是不可变的，需要使用 setState 方法更新状态；在 Vue 中，state 对象并不是必须的，数据由 data 属性在 Vue 对象中进行管理。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[this._v("#")]),this._v(" react")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-的优缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" react 的优缺点")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("可以通过函数式方法描述视图组件（好处：相同的输入会得到同样的渲染结果，不会有副作用；组件不会被实例化，整体渲染性能得到提升）")]),t._v(" "),a("li",[t._v("集成虚拟 DOM（性能好）")]),t._v(" "),a("li",[t._v("单向数据流（好处是更容易追踪数据变化排查问题")]),t._v(" "),a("li",[t._v("一切都是 component：代码更加模块化，重用代码更容易，可维护性高")]),t._v(" "),a("li",[t._v("大量拥抱 es6 新特性")]),t._v(" "),a("li",[t._v("jsx")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("jsx 的一个问题是，渲染函数常常包含大量逻辑，最终看着更像是程序片段，而不是视觉呈现。后期如果发生需求更改，维护起来工作量将是巨大的")]),this._v(" "),s("li",[this._v("大而全，上手有难度")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"jsx-的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx-的优缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" jsx 的优缺点")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("允许使用熟悉的语法来定义 HTML 元素树")]),t._v(" "),a("li",[t._v("JSX 让小组件更加简单、明了、直观。")]),t._v(" "),a("li",[t._v("更加语义化且易懂的标签")]),t._v(" "),a("li",[t._v("JSX 本质是对 JavaScript 语法的一个扩展，看起来像是某种模板语言，但其实不是。但正因为形似 HTML，描述 UI 就更直观了，也极大地方便了开发；")]),t._v(" "),a("li",[t._v("在 React 中 babel 会将 JSX 转换为"),a("code",[t._v("React.createElement")]),t._v("函数调用，然后将 JSX 转换为正确的 JSON 对象（VDOM 也是一个“树”形的结构）")]),t._v(" "),a("li",[t._v("React/JSX 乍看之下，觉得非常啰嗦，但使用 JavaScript 而不是模板语法来开发（模板语法比较有局限性），赋予了开发者许多编程能力。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"dom-diff-算法和虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-diff-算法和虚拟-dom","aria-hidden":"true"}},[this._v("#")]),this._v(" dom diff 算法和虚拟 DOM")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("步骤一：用 JS 对象模拟 DOM 树")]),this._v(" "),s("li",[this._v("步骤二：比较两棵虚拟 DOM 树的差异")]),this._v(" "),s("li",[this._v("步骤三：把差异应用到真正的 DOM 树上")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("virtual dom")]),this._v("，也就是虚拟节点。它通过 JS 的 Object 对象模拟 DOM 中的节点，然后再通过特定的 render 方法将其渲染成真实的 DOM 节点。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"为什么-js-对象模拟-dom-会比-js-操作-dom-来得快"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-js-对象模拟-dom-会比-js-操作-dom-来得快","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么 js 对象模拟 DOM 会比 js 操作 DOM 来得快")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 1"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 2"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 3"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'ul'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tag"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'li'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'Item 1'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tag"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'li'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'Item 2'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tag"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'li'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'Item 3'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-组件性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" react 组件性能优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-组件间的数据传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件间的数据传递","aria-hidden":"true"}},[this._v("#")]),this._v(" react 组件间的数据传递")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("p",[this._v("兄弟组件不能直接相互传送数据，此时可以将数据挂载在父组件中，由两个组件共享")])]),this._v(" "),s("li",[s("p",[this._v("子组件向父组件通讯，可以通过父组件定义事件（回调函数），子组件调用该函数，通过实参的形式来改变父组件的数据来通信")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//子组件")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("onCommentSubmit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("author"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getTime")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//父组件")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"m-index"')]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("评论"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("CommentList data"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("CommentForm onCommentSubmit"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleCommentSubmit"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("bind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",{attrs:{start:"3"}},[a("li",[t._v("非父子组件间的通信：可以使用全局事件来实现组件间的沟通，React 中可以引入 eventProxy 模块，利用"),a("code",[t._v("eventProxy.trigger()")]),t._v("方法发布消息，"),a("code",[t._v("eventProxy.on()")]),t._v("方法监听并接收消息。")]),t._v(" "),a("li",[t._v("组件间层级太深，可以使用上下文方式，让子组件直接访问祖先的数据或函数，通过"),a("code",[t._v("this.context.xx")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"无状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 无状态组件")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Title")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" color "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'red'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'标题'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" style "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    color"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" color\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div style"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"高阶组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 高阶组件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"属性代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 属性代理")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'React'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//高阶组件定义")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("HOC")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" WrappedComponent "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("WrapperComponent")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("WrappedComponent "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//普通的组件")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("WrappedComponent")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//....")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("//高阶组件使用")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("HOC")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WrappedComponent"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"反向继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向继承","aria-hidden":"true"}},[this._v("#")]),this._v(" 反向继承")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("HOC")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" WrappedComponent "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("extends")]),t._v(" WrappedComponent "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-事件和传统事件有什么区别吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-事件和传统事件有什么区别吗","aria-hidden":"true"}},[this._v("#")]),this._v(" react 事件和传统事件有什么区别吗")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-组件生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-组件生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" react 组件生命周期")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("componentWillReceiveProps(nextProps)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("shouldComponentUpdate(nextProps,nextState)")]),this._v(" "),s("li",[this._v("componentWillUpdate")]),this._v(" "),s("li",[this._v("render")]),this._v(" "),s("li",[this._v("componentDidUpdate")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[this._v("#")]),this._v(" vue")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"vue-双向绑定底层实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-双向绑定底层实现原理","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 双向绑定底层实现原理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("vue.js 采用数据劫持的方式，结合发布者-订阅者模式，通过"),s("code",[this._v("Object.defineProperty()")]),this._v("来劫持各个属性的 setter，getter 以监听属性的变动，在数据变动时发布消息给订阅者，触发相应的监听回调：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"vue-虚拟-dom-和-react-虚拟-dom-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-虚拟-dom-和-react-虚拟-dom-的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 虚拟 DOM 和 react 虚拟 DOM 的区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如要避免不必要的子组件的重新渲染，你需要在所有可能的地方使用 PureComponent，或是手动实现"),s("code",[this._v("shouldComponentUpdate")]),this._v(" 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"v-show-和-v-if-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show-和-v-if-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" v-show 和 v-if 区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"vue-组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件通信","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 组件通信")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("父传子: "),s("code",[this._v("this.$refs.xxx")]),this._v("\n子传父: "),s("code",[this._v("this.$parent.xxx")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("还可以通过"),s("code",[this._v("$emit")]),this._v("方法出发一个消息，然后"),s("code",[this._v("$on")]),this._v("接收这个消息")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"你如何评价-vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你如何评价-vue","aria-hidden":"true"}},[this._v("#")]),this._v(" 你如何评价 vue")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("不需要 setState，直接修改数据就能刷新页面，而且不需要 react 的 shouldComponentUpdate 就能实现最高效的渲染路径。")]),this._v(" "),s("li",[this._v("渐进式的开发模式，模版方式->组件方式->路由整合->数据流整合->服务器渲染。上手的曲线更加平滑简单，而且不像 react 一上来就是组件全家桶")]),this._v(" "),s("li",[this._v("v-model 给开发后台管理系统带来极大的便利，反观用 react 开发后台就是个杯具")]),this._v(" "),s("li",[this._v("html，css 与 js 比 react 更优雅地结合在一个文件上。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("指令太多")]),this._v(" "),s("li",[this._v("自带模板扩展不方便")]),this._v(" "),s("li",[this._v("组件的属性传递没有 react 的直观和明显")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"说说你对-mvvm-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说你对-mvvm-的理解","aria-hidden":"true"}},[this._v("#")]),this._v(" 说说你对 MVVM 的理解")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Model 层代表数据模型，可以在 Model 中定义数据修改和操作业务逻辑；")]),this._v(" "),s("li",[this._v("view 代表 UI 组件。负责将数据模型转换成 UI 展现出来")]),this._v(" "),s("li",[this._v("ViewModel 是一个同步 View 和 Model 的对象")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"为什么选择-vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择-vue","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么选择 vue")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("reactjs 的全家桶方式，实在太过强势，而自己定义的 JSX 规范，揉和在 JS 的组件框架里，导致如果后期发生页面改版工作，工作量将会巨大。")]),this._v(" "),s("li",[this._v("vue 的核心：数据绑定 和 视图组件。")]),this._v(" "),s("li",[this._v("Vue 的数据驱动：数据改变驱动了视图的自动更新，传统的做法你得手动改变 DOM 来改变视图，vuejs 只需要改变数据，就会自动改变视图，一个字：爽。再也不用你去操心 DOM 的更新了，这就是 MVVM 思想的实现。")]),this._v(" "),s("li",[this._v("视图组件化：把整一个网页的拆分成一个个区块，每个区块我们可以看作成一个组件。网页由多个组件拼接或者嵌套组成")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"vue-中-mixin-与-extend-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-中-mixin-与-extend-区别","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 中 mixin 与 extend 区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("全局注册混合对象，会影响到所有之后创建的 vue 实例，而"),s("code",[this._v("Vue.extend")]),this._v("是对单个实例进行扩展。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("methods")]),this._v("，"),s("code",[this._v("components")]),this._v("，"),s("code",[this._v("directives")]),this._v("将被混为同一个对象。两个对象的键名（方法名，属性名）冲突时，取组件（而非 mixin）对象的键值对")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"双向绑定和单向数据绑定的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双向绑定和单向数据绑定的优缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" 双向绑定和单向数据绑定的优缺点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("只有 UI 控件 才存在双向，非 UI 控件 只有单向。")]),this._v(" "),s("li",[this._v("单向绑定的优点是可以带来单向数据流，这样的好处是流动方向可以跟踪，流动单一，没有状态, 这使得单向绑定能够避免状态管理在复杂度上升时产生的各种问题, 程序的调试会变得相对容易。")]),this._v(" "),s("li",[this._v("单向数据流更利于状态的维护及优化，更利于组件之间的通信，更利于组件的复用")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("双向数据流是自动管理状态的, 但是在实际应用中会有很多不得不手动处理状态变化的逻辑, 使得程序复杂度上升无法追踪局部状态的变化")]),this._v(" "),s("li",[this._v("双向数据流，值和 UI 绑定，但由于各种数据相互依赖相互绑定，导致数据问题的源头难以被跟踪到")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("v-model")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 等价于以下内容 --\x3e")]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v(":value")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("@input")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something = $event.target.value"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"前端路由实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由实现方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端路由实现方式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("HTML5 History 两个新增的 API：history.pushState 和 history.replaceState，两个 API 都会操作浏览器的历史记录，而不会引起页面的刷新。")]),this._v(" "),s("li",[this._v("Hash 就是 url 中看到 # ,我们需要一个根据监听哈希变化触发的事件( hashchange) 事件。我们用 window.location 处理哈希的改变时不会重新渲染页面，而是当作新页面加到历史记录中，这样我们跳转页面就可以在 hashchange 事件中注册 ajax 从而改变页面内容。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'hashchange'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funcRef"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("从性能和用户体验的层面来比较的话，后端路由每次访问一个新页面的时候都要向服务器发送请求，然后服务器再响应请求，这个过程肯定会有延迟。而前端路由在访问一个新页面的时候仅仅是变换了一下路径而已，没有了网络延迟，对于用户体验来说会有相当大的提升。")]),this._v(" "),s("li",[this._v("前端路由的优点有很多，比如页面持久性，像大部分音乐网站，你都可以在播放歌曲的同时，跳转到别的页面而音乐没有中断，再比如前后端彻底分离。\n开发一个前端路由，主要考虑到页面的可插拔、页面的生命周期、内存管理等。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("使用浏览器的前进，后退键的时候会重新发送请求，没有合理地利用缓存。")]),this._v(" "),s("li",[this._v("History interface 提供了两个新的方法："),s("code",[this._v("pushState()")]),this._v(", "),s("code",[this._v("replaceState()")]),this._v("使得我们可以对浏览器历史记录栈进行修改：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("pushState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("URL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replaceState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stateObject"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("URL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="frame.md";s.default=e.exports}}]);